###_[ev/PTep/LSP/莉莉]	####################################
#Root = country
#This = species
can_colonize_with_species = { #可殖民星球的物种
	OR = {
		AND = { # UGRC + 香草 vanilla
			NAND = { #排除条件 Exclusions
				has_species_flag = community_mod_rules_trigger
				OR = {
					has_species_flag = community_can_colonize_with_species_true
					has_species_flag = community_can_colonize_with_species_false
				}
			}
			# ev
			Root = {
				OR = {
					NOT = { 
						is_country_type = default_ev 
					}
					AND = {
						is_country_type = default_ev
						OR = {
							has_origin = origin_ev_both_choosen
							has_country_flag = has_ev_to_planets
							has_civic = civic_ev_planet_and_fleet
						}
					}
				}
			}
			# PTep
			NOT = { 
				has_trait = trait_plentiful_traditions_pt_cocoon 
			}

			##_|VANILLA|   +LSP
			has_colonization_control = {
				type = colonization_control_no
				country = root
			}
			OR = {
				NOT = { 
					has_trait = trait_self_modified 
				}
				is_same_species = root
			}
			if = {
				limit = {
					OR = {
						is_sapient = no
						has_trait = trait_zombie
						has_trait = LSP_trait_original   #LSP
					}
				}
				custom_tooltip = {
					always = no
				}
			}
			else_if = {
				limit = { 
					has_trait = trait_hive_mind 
				}
				root = { 
					is_hive_empire = yes 
				}
			}
			else_if = {
				limit = { 
					has_trait = trait_machine_unit 
				}
				root = { 
					is_machine_empire = yes 
				}
			}
			else = {
				always = yes
			}
			#河豚不能自己殖民
			NOT = { 
				is_species_class = PUFFER 
			}
		}
		AND = { #国防部 MOD
			has_species_flag = community_mod_rules_trigger
			AND = {
				has_species_flag = community_can_colonize_with_species_true
				NOT = { 
					has_species_flag = community_can_colonize_with_species_false 
				}
			}
		}
	}
}


###_|允许繁殖|	GF/HFE/hiveDLC/PTep/Eevt/多彩/魔女		####################################
# Checks if a pop can procreate
# This = Species
# Root = Planet
can_species_procreate = { #可繁殖物种
	OR = {
		AND = { # UGRC + 香草 vanilla
			NAND = { #排除条件 Exclusions
				has_species_flag = community_mod_rules_trigger
				OR = {
					has_species_flag = community_can_species_procreate_true
					has_species_flag = community_can_species_procreate_false
				}
			}
			is_sapient = yes
			##	+魔圆/GF/HFE/hiveDLC/PTep/Eevt/魔女
			NOR = {
				has_trait = trait_machine_unit
				#	vanilla + umd
				AND = {
					has_trait = trait_mechanical
					NOR = {
						has_trait = trait_biorobot
						has_trait = trait_biorobot_2
						root.owner = {
							has_policy_flag = synth_pop_growth_focus
						}
					}
				}
				#	魔圆
				has_trait = trait_mahoshoujo
				#	GF
				has_trait = GF_trait_doll
				#	GF_SF
				AND = {
					has_trait = trait_gf_sfdoll
					NOT = {		
						has_trait = trait_sfdoll_nanite	
					}
				}
				#	HFE
				has_trait = hfe_species_trait_brainworm
				#	hiveDLC
				has_trait = trait_hive_mind_overlord
				#	PTep
				has_trait = trait_plentiful_traditions_pt_cocoon
				#	Eevt
				has_trait = trait_memorex_comatos
				#	魔女
				has_trait = trait_dummy	
				#	Futa
				if = {
					limit = { 
						has_global_flag = futa_between_us
					}
					futa_can_not_species_procreate = yes
					root = {
						is_planet_class = pc_futa_ring_world
					}
				}
				else = {
					always = no
				}
			}
			NAND = {
				root = { 
					has_modifier = slave_colony 
				}
				NOT = { 
					has_citizenship_type = { 
						type = citizenship_slavery 
						country = root.owner 
					} 
				}
			}
			if = {
				limit = {
					has_trait = trait_necrophage
				}
				NOT = {
					root = {
						any_owned_species = {
							has_population_control = { 
								country = root.owner 
								type = no 
							}
							species_can_be_necrophaged = yes
						}
					}
				}
			}
			NOT = { 
				has_species_flag = nivlac_no_procreation 
			}
		
			##################################################
			#	HFE
			NAND = {
				hfe_trigger_population_procreate_housing_block_enabled = yes
				root = { 
					free_housing <= -1 
				}
			}
			#	多彩
			if = { 
				limit = { 
					has_global_flag = love_between_us 
				}
				#淫触之虫无法自然增长 
				OR = {
					AND = {
						has_trait = trait_DC_ethic_parasite_mind
						root.owner = {
							has_country_flag = has_ten_crisis_perk_1
						}
					}
					NOT = {
						has_trait = trait_DC_ethic_parasite_mind
					}
				}
			}
			#	魔女
			if = { 
				limit = { 
					has_trait = trait_reanimated_materials 
				}
				root = {
					num_assigned_jobs = {
						job = matter_reanimator
						value > 0
					}
					NOR = { # make sure elaina always grow first
						has_building = building_possibility_portal
						has_building = building_dimensional_instrument
						has_deposit = d_mysterious_portal
					}
					owner = {
						NOT = {
							has_deficit = consumer_goods
						}
					}
				}
			}
			if = { 
				limit = { 
					has_trait = trait_houki 
				}
				root.owner = {
					has_country_flag = newbirth_houki
					NOT = { 
						has_country_flag = max_houki_number_reached 
					}
				}
			}
			if = {
				limit = {
					OR = {
						has_trait = trait_witch
						has_trait = trait_victorika
						has_trait = trait_elaina_descendant
					}
				}
				OR = {
					root.owner = {
						has_ascension_perk = ap_xeno_compatibility
					}
					root = {
						OR = {
							has_building = building_possibility_portal
							has_building = building_dimensional_instrument
							has_deposit = d_mysterious_portal
						}
					}
				}
			}
		}
		AND = { #国防部 MOD
			has_species_flag = community_mod_rules_trigger
			AND = {
				has_species_flag = community_can_species_procreate_true
				NOT = { 
					has_species_flag = community_can_species_procreate_false 
				}
			}
		}
	}
}


###_[物种组装]
#_|基础trgr|	原版智械/原版克隆|is_organic_species|
#_|特殊trgr|	UGRC组装物种/WSG物种
#_|MOD物种|		微械/时与空/久远/azl/azlr/GF/PTep/SC	/hiveDLC/多彩/魔女	/EE
# Checks if a pop can be assembled
# This = Species
# Root = Planet
can_species_be_assembled = { #可组装物种
	OR = {
		AND = { #香草 vanilla
			NAND = { #排除条件 Exclusions
				has_species_flag = community_mod_rules_trigger
				OR = {
					has_species_flag = community_can_species_be_assembled_true
					has_species_flag = community_can_species_be_assembled_false
				}
			}
			is_sapient = yes
			has_population_control = {
				type = no
				country = root.owner
			}
			##	微械
			root.owner = { 
				NOT = { 
					has_modifier = modifier_ban_assemble 
				} 
			}
			## Futa
			if = {
				limit = {
					has_global_flag = futa_between_us
				}
				is_can_not_be_assembled_species = yes
			}
			##_|基础条件|
			OR = {
				#_|原版智械|	+azl/GF/魔女/久远/时与空
				AND = {
					is_robotic = yes
					NOR = {
						has_trait = trait_robot_mind_relic_core	# azl
						has_trait = trait_reassembler			# 时与空
					}
					KZ_VOY_trgr_plnt_ASSEMBLY = yes   # 久远
					#	魔女
					if = { 
						limit = { 
							has_trait = trait_dummy 
						}
						if = { 
							limit = { 
								root.owner = { 
									has_origin = origin_garbage_princesses 
								} 
							}
							root = { 
								OR = {
									has_building = building_enigmatic_assembly_plant
									num_assigned_jobs = {
										job = dummicist
										value > 0
									}
								}
								check_modifier_value = {
									modifier = planet_pop_assembly_add
									value > 0
								}
							}
						}
						else = {
							root.owner = { 
								has_technology = tech_dummy_workers 
							}
							root = {
								num_assigned_jobs = {
									job = dummicist
									value > 0
								}
							}
							root = {
								check_modifier_value = {
									modifier = planet_pop_assembly_add
									value > 0
								}
							}
						}
					}
					#	久远
					else_if = { 
						limit = { 
							has_trait = trait_KZ_VOY_magic_puppet 
						}
						KZ_VOY_can_assemble_magic_puppet = yes
					}
					#	GF
					else_if = { 
						limit = { 
							has_trait = GF_trait_doll 
						}
						root.owner = {
							GF_can_build_doll_species = yes
						}
					}
					#_|v默认|	+azl
					else = {
						root = {
							check_modifier_value = {
								modifier = planet_pop_assembly_add
								value > 0
							}
							owner = {
								NOR = {# 这类mod国家不组装机器人
									# azl
									has_authority = auth_azur_lane_1
									has_authority = auth_azur_lane_2
									has_authority = auth_azur_lane_K
									# GF
									has_authority = auth_commonwealth
								}
							}
						}
					}
					#Futa
					if = {
						limit = { 
							has_global_flag = futa_between_us
						}
						if = {
							limit = {
								root.owner = {
									is_futa_country = yes
								}
							}
							if = {
								limit = {
									has_trait = trait_FUTA_DOLL
									NOT = {
										has_trait = trait_futa
									}
								}
								root = {
									OR = {
										is_planet_class = pc_futa_ring_world
										has_building = building_futa_wawa
									}
								}
							}
							else = {
								has_trait = trait_futa
							}
						}	
					}
				}
				#_|克隆|
				AND = {
					is_organic_species = yes
					#_|Futa|
					if = {
						limit = { 
							root.owner = {
								is_futa_country = yes
							}
						}
						has_trait = trait_futa
					}
					#_|v蜂群|	+Ecar
					else_if = {
						limit = {
							root.owner = { 
								is_hive_empire = yes 
							}
						}
						OR = {
							has_trait = trait_hive_mind
							# Ecar
							has_trait = trait_psionic_link
						}		
					}
					#_|v植物|
					else_if = {
						limit = { 
							has_budding_trait = yes 
						}
						root = {
							any_owned_species = { 
								is_exact_same_species = prevprev 
							}
						}
					}
					#_|v鲸族|
					else_if = {
						limit = { 
							has_trait = trait_tiyanki 
						}
						root = {
							any_owned_species = { 
								is_exact_same_species = prevprev 
							}
						}
					}
					#_|v义体|
					else_if = {
						limit = {
							root.owner = {
								has_tradition = tr_cybernetics_assembly_standards
								has_policy_flag = roboticist_output_build_cyborgs
							}
						}
						has_trait = trait_cybernetic
					}
					#_|v克隆军|      +星海帝皇
					else_if = {
						limit = {
							OR = {
								has_trait = trait_clone_soldier_infertile
								has_trait = trait_clone_soldier_infertile_full_potential
							}
						}
						root = {
							# Event 'clones.3' should cover this, but extra safety check.
							OR = {
								has_building = building_clone_army_clone_vat
								#	星海帝皇
								has_building = building_clone_guard_clone_vat
								has_building = building_clone_vats
							}
							NOT = {
								check_variable = {
									which = clone_pops_missing
									value = 0
								}
							}
						}
					}
					#_|涅槃帝国|
					else_if = {
						limit = {
							root.owner = {
								OR = {
									has_valid_civic = civic_nirvana_empire_dragon
									has_valid_civic = civic_nirvana_empire_council
								}
							}
							is_same_species = root.owner
						}
						root = { 
							check_modifier_value = { 
								modifier = planet_pop_assembly_organic_add 
								value > 0 
							} 
						}
					}
					#_|通用|=|存在克隆+特殊spcs+v死而后已|		+FW/星海帝皇/Ecar
					else = {
						root = {
							OR = {
								#	vanilla
								has_building = building_clone_vats   # 提供|planet_pop_assembly_organic_add|
								has_modifier = tiyanki_trophy
								owner = { 
									has_modifier = syamelles_curse 
								}
								AND = {
									has_building = building_posthumous_employment_center
									owner = { 
										has_civic = civic_permanent_employment 
									}
								}
								has_planet_flag = can_organic_assemble_flag #for mod compatibility
								#   星海帝皇
								has_building = building_clone_guard_clone_vat
								#	FW
								check_modifier_value = { 
									modifier = planet_pop_assembly_organic_add 
									value > 0 
								}
								#	Ecar
								has_building = building_advanced_clone_vats
							}
						}
					}
				}
				#	GF
				is_archetype = Dolls
			#	#	NYTO
            #	is_archetype = NYTO
				#	久远
				KZ_VOY_trgr_plnt_CLONE = yes
				#	SC
				is_archetype = DPURIFIER	# 净化者
				#	EE
				is_archetype = ASCENDED
				#	UGRC组装物种
				UGRC_trgr_spcs_ASSEMBLY = yes
				#	GF
				if = {
					limit = {
						has_trait = trait_doll
					}
					root.owner = { 
						has_authority = auth_commonwealth 
					}
				}
				else = {
					always = no
				}
				#	WSG物种/wsg
				if = {
					limit = {
						has_global_flag = has_wsg_mod
					}
					UGRC_trgr_spcs_WSG = yes
				}
				esle = {
					always = no
				}
				#	azl/azlr
				AND = {
					OR = {
						is_Azur_Lane_organic_species = yes
						is_KANSEN_species = yes
					}
					root = {
						check_modifier_value = {
							modifier = planet_pop_assembly_organic_add
							value > 0
						}
					}
				}
				#	PTep
				AND = {
					has_trait = trait_plentiful_traditions_pt_cocoon
					root.owner = { 
						has_ascension_perk = ap_total_assimilation 
					}
				}
				#   hiveDLC
   				NAND = {
					has_trait = trait_machine_central
					root.owner = { 
						has_valid_civic = civic_machine_replicators 
					}
				}
				#	多彩
				if = {
					limit = { 
						has_global_flag = love_between_us 
					}
					OR = {
						#雌伏于阴影之下起源 允许孤雌生殖物种组装
						AND = {
							has_trait = trait_suc_parthenogenesis
							root = {
								owner = {
									has_origin = origin_female_in_shadow
								}
							}
						}
						#允许播种者组装
						has_trait = trait_sowing_and_breeding
						#淫触之虫组装淫奴
						AND = {
							is_species_class = PAR
							root = {
								owner = {
									has_country_flag = parasite_mind_flag
								}
								any_owned_pop = {
									has_job = ten_nest_worker
								}
							}
						}
						#淫触圣女组装淫触造物
						AND = {
							is_species_class = Magical_Tentacle
							root = {
								owner = {
									has_country_flag = abstinence_flag
								}
								any_owned_pop = {
									has_job = procreate_doll
								}
							}
						}
						#圣光创造圣女
						AND = {
							has_trait = trait_DC_ethic_asceticism
							root = {
								OR = {
									has_building = building_holylight_clone_vats
									has_building = building_world_tree_0
									has_building = building_world_tree_1
									has_building = building_world_tree_2
									has_building = building_world_tree_3
									has_building = building_world_tree_4
									has_building = building_world_tree_5
									AND = {
										exists = owner
										has_holding = {
											holding = holding_world_tree
											owner = owner.overlord
										}
									}
								}
							}
						}
					}
				}
				esle = {
					always = no
				}
				#	久远
				if = {
					limit = { 
						OR = {
							has_trait = trait_KZ_VOY_sub_terran_dragon
							has_trait = trait_KZ_VOY_sub_terran_dragon_SP
						}
					}
					KZ_VOY_trgr_plnt_CLONE = yes
				}
				else = {
					always = no
				}				
			}
		}
		AND = { #国防部 MOD
			has_species_flag = community_mod_rules_trigger
			AND = {
				has_species_flag = community_can_species_be_assembled_true
				NOT = { 
					has_species_flag = community_can_species_be_assembled_false 
				}
			}
		}
	}
}

###_[可建造分公司国家]	ETCPM/wsg/GF/azl/azlr/hiveDLC/驴岛/多彩/莉莉/久远/星海帝皇/Ecar/rmaid/ARP	####################################
# This = country
can_build_branch_offices = { #可建立分部
	OR = {
		AND = { # UGRC + 香草 vanilla
			NAND = { #排除条件 Exclusions
				has_country_flag = community_mod_rules_trigger
				OR = {
					has_country_flag = community_can_build_branch_offices_true
					has_country_flag = community_can_build_branch_offices_false
				}
			}
			custom_tooltip = {
				fail_text = BRANCH_OFFICE_NOT_MEGACORP
				##	+ETCPM/hiveDLC/MCA/驴岛/wsg	/GF/azl/azlr/多彩	/Ecar
				OR = {
					has_authority = auth_corporate
					has_civic = civic_galactic_sovereign_megacorp

					#	ETCPM
					has_authority = auth_private
					#	hiveDLC
					has_valid_civic = civic_mutualistic_behavior
					has_valid_civic = civic_machine_trading
					#	MCA
					has_authority = auth_corporate_fiefdom
					has_authority = auth_cooperative
					#	驴岛
					has_civic = civic_business_union
					#	wsg
					if = {
						limit = { 
							has_global_flag = has_wsg_mod
						}
						OR = {
							has_authority = auth_warshipgirls
							AND = {
								has_authority = auth_shenhai
								OR = {
									has_country_flag = pantsu_shop_origin
									has_civic = civic_sh_criminal_syndicate
								}
							}
						}
					}
					else = {
						always = no
					}
					#	GF
					has_civic = GF_civic_GK
					#	azl
					if = {
						limit = {
							has_global_flag = azurlane_KuRUMiiii
						}
						OR = {
							has_authority = auth_azur_lane_0
							has_authority = auth_azur_lane_1
							has_authority = auth_azur_lane_2
							has_authority = auth_azur_lane_K
						}
					}
					else = {
						always = no
					}
					#	azlr
					AND = {
						exists = event_target:elizabeth_leader
						has_country_flag = azur_lane_leader_elizabeth
					}
					#	ark
					has_civic = civic_city_enterprise
					#	多彩
					if = {
						limit = {
							has_global_flag = love_between_us
						}
						OR = {
							#淫渊企业
							has_authority = auth_brothel 
							#破灭之光
							has_origin = origin_INN_destruction_light
							AND = {
								has_authority = auth_united_fleet
								has_valid_civic = civic_Hport
							}
						}
					}
					else = {
						always = no
					}
					#	Futa
					if = {
						limit = {
							has_global_flag = futa_between_us
						}
						OR = {
							#妓院兼容
							has_authority = auth_brothel
							has_authority = auth_brothel_Knights
							has_authority = auth_SUC_AI_Initial
							has_authority = auth_INN_AI_Initial
							#扶她
							has_country_flag = ICE_MOON_FUTA
						}
					}
					else = {
						always = no
					}
					#	莉莉
					has_authority = auth_AL_democratic
					#	久远
					KZ_VOY_can_build_branch_offices = yes
					#	星海帝皇	=|义军同盟|
					is_country_type = rebel_allience
					#	ARP
					has_authority = auth_Arp_0

					#_|Ecar|
					if = {
						limit = {
							has_global_flag = ideological_revolution	# |Ecar激活|
						}
						OR = {
							has_civic = civic_family_business
							has_civic = civic_world_cooperative
							has_valid_civic = civic_state_owned_enterprises
							has_valid_civic = civic_corporate_dominion
							has_valid_civic = civic_underworld_society
							has_valid_civic = civic_merchant_guilds
							has_valid_civic = civic_state_monopoly
							has_valid_civic = civic_machine_financial_investment
							has_active_tradition = tr_future_economy_soc
							AND = {
								has_ethic = ethic_fanatic_capitalism
								has_active_tradition = tr_future_economy
							}
						}
					}
					else = {
						always = no
					}

					#	rmaid		=|外派服务飞升|
					has_ascension_perk = ap_expactriate_service
				}
			}
		}
		AND = { #国防部 MOD
			has_country_flag = community_mod_rules_trigger
			AND = {
				has_country_flag = community_can_build_branch_offices_true
				NOT = { 
					has_country_flag = community_can_build_branch_offices_false 
				}
			}
		}
	}
}

###_[支持分公司的国家]	AAR	/ETCPM/swg/GF/azl/azlr/SOFE/ZOFE/驴岛/莉莉/Ecar/rmaid		####################################
# This = country
can_support_branch_offices = { #可被建立分部
	OR = {
		AND = { # UGRC + 香草 vanilla
			NAND = { #排除条件 Exclusions
				has_country_flag = community_mod_rules_trigger
				OR = {
					has_country_flag = community_can_support_branch_offices_true
					has_country_flag = community_can_support_branch_offices_false
				}
			}
			##_|禁止_国家类型|
			custom_tooltip = {
				fail_text = BRANCH_OFFICE_NOT_FALLEN_EMPIRES
				NOR = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire

					## 禁止所有|堕落帝国|	############
					# ev
					is_country_type = fallen_empire_ev
					# 阿夸
					is_country_type = kuat_fallen_empire
					is_country_type = kuat_awakened_fallen_empire
					is_country_type = awakened_return_kuat_empire
					# HFE	hfe_civic_egypt_fury|国策|决定是否是afe
					is_country_type = human_fallen_empire
					# 致命风暴	|afe|
					is_country_type = awakened_gate_builders
					# ZOFE
					is_country_type = ascended_empire
					is_country_type = lost_empire
					# SOFE
					is_progenitor_empires = yes
					is_country_type = sofe_light_seeker
					# EE
					is_country_type = eternal_empire
					# 莉莉
					is_country_type = al_fallen_empire
					is_country_type = al_fallen_empire_no_ai
					
					## 禁止其他|特殊国家|	############
					# azlr
					has_authority = auth_azur_dictatorial
				}
			}
			##_|禁止_巨企| +AAR		/ETCPM/hiveDLC/MCA/驴岛/wsg		/GF/azl/SOFE	/Ecar
			custom_tooltip = {
				fail_text = BRANCH_OFFICE_NOT_ON_MEGACORP_PLANET
				OR = {
					## 特殊允许|企业政府|	############
					# AAR
					is_subject_with_preset = { 
						PRESET = AAR_SBJ_subsidiary 
					}
					# Ecar
					if = {
						limit = {
							has_global_flag = ideological_revolution	# |Ecar激活|
						}
						OR = {
							has_tradition = tr_future_economy
							has_civic = civic_world_cooperative
							has_valid_civic = civic_criminal_heritage
							has_civic = civic_galactic_megacorp
							has_civic = civic_galactic_sovereign
							has_civic = civic_galactic_sovereign_megacorp
							has_civic = civic_galactic_sovereign_people
						}
					}
					else = {
						always = no
					}

					## 禁止所有|企业政府|	############
					NOR = {
						has_authority = auth_corporate
						has_civic = civic_galactic_sovereign_megacorp

						#_|巨企国家|	ETCPM/hiveDLC/MCA/驴岛/wsg
						# ETCPM
						has_authority = auth_private
						# hiveDLC
						has_valid_civic = civic_mutualistic_behavior
						has_valid_civic = civic_machine_trading
						# MCA
						has_authority = auth_corporate_fiefdom
						has_authority = auth_cooperative
						# 驴岛
						has_civic = civic_business_union
						# wsg
						if = {
							limit = {
								has_global_flag = has_wsg_mod
							}
							AND ={
								OR ={
									has_authority = auth_warshipgirls
									AND = {
										has_authority = auth_shenhai
										OR = {
											has_country_flag = pantsu_shop_origin
											has_civic = civic_sh_criminal_syndicate
										}
									}
								}
								# 多彩
								if = {
									limit = {
										has_global_flag = love_between_us
									}
									NOT = { 
										has_valid_civic = civic_master
									}
								}
							}
						}
						# GF
						has_civic = GF_civic_GK
						# azl
						has_authority = auth_azur_lane_1
						# 进阶飞升
						is_subject_type = subsidiary2
						# SOFE
						has_valid_civic = civic_sofe_inner_strength
						# ark
						has_civic = civic_city_enterprise
						# 多彩
						if = {
							limit = {
								has_global_flag = love_between_us
							}
							#破灭之光
							has_origin = origin_INN_destruction_light
							# 多彩玩法拓展
							has_valid_civic = civic_corruption_syndicate # 罪企
						}
						else = {
							always = no
						}
					}
				}
			}
			##_|必要国家类型| +ZOFE
			custom_tooltip = {
				fail_text = BRANCH_OFFICE_NOT_REGULAR_EMPIRE
				OR = {
					is_regular_empire = yes
					AND = {
						is_gestalt = no
						is_country_type = ascended_empire		#_ZOFE
					}
				}
			}
			custom_tooltip = {
				fail_text = BRANCH_OFFICE_NOT_ADVANCED_PRE_FTL
				if = {
					limit = {
						is_primitive = yes
						is_gestalt = no
					}
					OR = {
						has_pre_ftl_age = atomic_age
						has_pre_ftl_age = early_space_age
					}
				}
			}
		}
		AND = { #国防部 MOD
			has_country_flag = community_mod_rules_trigger
			AND = {
				has_country_flag = community_can_support_branch_offices_true
				NOT = { 
					has_country_flag = community_can_support_branch_offices_false 
				}
			}
		}
	}
}

###_[可建造分公司の星球]	AAR	/wsg/azl/azlr/rmaid/HFE/hiveDLC/MCA/ETCPM/莉莉/久远/Ecar/星海帝皇	####################################
# This = planet
# Root = country
can_build_branch_office_on_planet = { #可建立分部的行星
	OR = {
		AND = { # UGRC + 香草 vanilla
			NAND = { #排除条件 Exclusions
				has_planet_flag = community_mod_rules_trigger
				OR = {
					has_planet_flag = community_can_build_branch_office_on_planet_true
					has_planet_flag = community_can_build_branch_office_on_planet_false
				}
			}
			###_|非灭绝政体|	 +wsg
			custom_tooltip = {
				fail_text = requires_recipient_not_fanatic_purifiers
				exists = owner
				owner = {
					OR = {
						is_same_species = root
						NOT = { 
							has_civic = civic_fanatic_purifiers 
						}
					}
				}
			}
			###_|未被观察|
			custom_tooltip = {
				fail_text = BRANCH_OFFICE_NO_OBSERVATION_OUTPOST
				if = {
					limit = {
						root = { 
							is_criminal_syndicate = yes 
						}
						owner = { 
							is_primitive = yes 
						}
					}
					has_observation_outpost = yes
					observation_outpost_owner = {
						is_same_value = root
					}
				}
			}
			###_core商业协定	+hiveDLC/wsg/azl/azlr/AAR/ETCPM/莉莉/久远
			custom_tooltip = {
				fail_text = BRANCH_OFFICE_NOT_COMMERCIAL_PACT
				exists = owner
				OR = {
					##_|简单root条件|只要root是这些国家则必然能建造
					root = {
						OR = {
							is_criminal_syndicate = yes

							# hiveDLC
							has_valid_civic = civic_mutualistic_behavior
							# wsg
							has_civic = civic_sh_criminal_syndicate
							# azl
							has_authority = auth_azur_lane_1
							# 莉莉
							has_authority = auth_AL_democratic
							# 久远
							KZ_VOY_can_build_branch_offices = yes
							# azlr
							AND = {
								exists = event_target:elizabeth_leader
								has_country_flag = azur_lane_leader_elizabeth
							}
							# rmaid
							Maid_trigger_0_can_build_branch_offices = yes
							# futa
							if = {
								limit = { 
									has_global_flag = futa_between_us
								}
								OR = {
									has_country_flag = ICE_MOON_FUTA
									has_valid_civic = civic_criminal_heritage
									has_valid_civic = civic_semen_pantyhose_brothel
								}
								is_ai = no
							}
							else = {
								always = no
							}
						}
					}					
					owner = { 
						has_commercial_pact = root 
					}
					owner = { 
						is_in_federation_with = root 
					}
					AND = {
						has_observation_outpost = yes
						observation_outpost = {
							has_modifier = preftl_action_trade_pact
						}
					}
					# allow branch offices in subsidiaries and vice versa (and fellow subjects)
					##_|附庸国建造|
					root = {
						is_subject = yes
						OR = {
							has_authority = auth_corporate
							has_civic = civic_galactic_sovereign_megacorp
						}
						overlord = {
							OR = {
								is_same_value = prevprev.owner
								is_same_value = prevprev.owner.overlord
							}
						}
					}
					##_|宗主国建造| +wsg
					owner = {
						is_subject = yes
						overlord = {
							OR = {
								is_same_value = root
								is_same_value = root.overlord
							}
							OR = {
								has_authority = auth_corporate
								has_civic = civic_galactic_sovereign_megacorp

								# |wsg|	=宗主必然建造
								has_authority = auth_warshipgirls
							}
						}
					}
					AND = {
						root = { 
							has_civic = civic_galactic_sovereign_megacorp 
						}
						owner = { 
							is_galactic_community_member = yes 
						}
					}
					AND = {
						root = { 
							has_modifier = imperial_charter 
						}
						owner = { 
							is_galactic_community_member = yes 
						}
					}
					# ETCPM
					if = {
						limit = {
							has_global_flag = expanded_pops_active
						}
						owner = { 
							has_country_flag = cb_markets_opened@root 
						}
					}
					esle = {
						always = no
					}
					# HFE
					if = {
						limit = {
							has_global_flag = hfe_installed
						}
						root = { 
							exists = overlord		
							overlord = { 
								is_country = prevprev.owner 
							} 
						}	#_this的owner
					}
					esle = {
						always = no
					}
					# azl	=|自我建造|
					if = {
						limit = {
							has_global_flag = azurlane_KuRUMiiii	# |azl激活|
						}
						owner = {
							is_same_value = root
							OR = {
								has_authority = auth_azur_lane_2
								has_authority = auth_azur_lane_0
								has_authority = auth_azur_lane_K
							}
						}
					}
					esle = {
						always = no
					}
					# wsg	=|贸易战争|
					if = {
						limit = {
							has_global_flag = has_wsg_mod
						}
						AND = {
							owner = { 
								has_country_flag = lose_wg_shop_war 
							}
							root = {
								has_country_flag = pantsu_shop_origin
							}
						}
					}
					else = {
						always = no
					}
					# Ecar	=|自我建造|
					if = {
						limit = {
							has_global_flag = ideological_revolution	# |Ecar激活|
						}					
						owner = {
							is_same_value = root	# <建造者>和<接受者>相同
							OR = {
								has_active_tradition = tr_future_economy_soc
								has_civic = civic_state_owned_enterprises
								has_civic = civic_world_cooperative
								AND = {
									has_active_tradition = tr_future_economy
									OR = {
										has_ethic = ethic_fanatic_capitalism
										has_authority = auth_corporate
										has_civic = civic_galactic_sovereign_megacorp
										has_civic = civic_family_business
										has_valid_civic = civic_underworld_society
										has_valid_civic = civic_corporate_dominion
										has_valid_civic = civic_merchant_guilds
										has_valid_civic = civic_state_monopoly
										has_valid_civic = civic_beacon_of_liberty
									}
								}
							}
						}
					}
					else = {
						always = no
					}
					# 星海帝皇	=|义军同盟|
					AND = {
						root = { 
							is_country_type = rebel_allience 
						}
						owner = { 
							is_galactic_emperor = yes 
						}
					}
					# 多彩
					if = {
						limit = {
							has_global_flag = love_between_us
						}
						#爱欲盛宴
						OR = {
							#爱欲盛宴
							owner = {
								has_valid_civic = civic_master
							}
							#破灭之光
							root = { 
								has_origin = origin_INN_destruction_light 
							}
						}
						
					}
					else = {
						always = no
					}
				}
			}
			custom_tooltip = {
				fail_text = BRANCH_OFFICE_MEGACORP_OVERLORD
				exists = owner
				# failure message for having a corporate overlord
				if = {
					limit = {
						OR = {
							# Not valid if you aren't a subject.
							root = {
								is_subject = no
							}
							# Or if your overlord isn't a megacorp.
							root = {
								is_subject = yes
								overlord = {
									NOR = {
										has_authority = auth_corporate
										has_civic = civic_galactic_sovereign_megacorp
									}
								}
							}
						}
					}
					always = yes
				}
				else = {
					AND = {
						root = {
							is_subject = yes
							overlord = {
								OR = {
									has_authority = auth_corporate
									has_civic = civic_galactic_sovereign_megacorp
								}
							}
						}
						owner = {
							OR = {
								is_subject = no
								AND = {
									is_subject = yes
									overlord = { 
										NOT = { 
											is_same_value = root.overlord 
										} 
									}
								}
							}
						}
					}
				}
			}
			###_|贸易协议|
			custom_tooltip = {
				fail_text = BRANCH_OFFICE_CRIMINAL_HERITAGE_HAS_TRUCE
				exists = owner
				OR = {
					#_|非罪企| +wsg/azl
					root = {
						is_criminal_syndicate = no
						NOR = {
							has_civic = civic_sh_criminal_syndicate	# wsg
							has_authority = auth_azur_lane_1		# azl
						}
					}
					#_|和平状态|
					owner = {
						NOR = {
							has_truce = root
							is_at_war_with = root
						}
					}

					# wsg|贸易战争|
					if = {
						limit = {
							has_global_flag = has_wsg_mod
						}
						owner = {
							has_civic = civic_sh_criminal_syndicate
						}
						AND = {
							owner = { 
								has_country_flag = lose_wg_shop_war 
							}
							root = {
								has_country_flag = pantsu_shop_origin
							}
						}
					}
					else = {
						always = no
					}
					# 莉莉
					root = { 
						has_authority = auth_AL_democratic 
					}	#_al
				}
			}
			###_|罪企查封|
			custom_tooltip = {
				fail_text = BRANCH_OFFICE_CRIMINAL_COOLDOWN
				exists = owner
				OR = {
					#_|非罪企|	+wsg/azl
					root = {
						is_criminal_syndicate = no
						root = { 
							NOT = { 
								has_authority = auth_azur_lane_1 
							} 
						}	# azl
					}
					#_|当前星球未查封| +wsg/azl
					AND = {
						root = { 
							OR = {
								is_criminal_syndicate = yes 
								owner = { 
									has_civic = civic_sh_criminal_syndicate 
								}
							}
						}
						NOT = {
							has_planet_flag = criminal_branch_closed_cooldown_planet@root 
						}
					}
					# wsg
					if = {
						limit = { 
							has_global_flag = has_wsg_mod
						}
						# wsg|贸易战争|
						AND = {
							owner = { 
								has_country_flag = lose_wg_shop_war 
							}
							root = {
								has_country_flag = pantsu_shop_origin
							}
						}
					}
					else = {
						always = no
					}
					
					#莉莉
					root = { 
						has_authority = auth_AL_democratic
					}	#_al
				}
			}
			### wsg
			if = {
				limit = {
					has_global_flag = has_wsg_mod
				}
				custom_tooltip = {
					fail_text = requires_recipient_not_warshipgirls
					exists = owner
					owner = {
						NOR = {
							AND = {
								has_authority = auth_warshipgirls	# 舰r=不接受分公司
								NOT = { 
									has_valid_civic = civic_master
								}   #_[多彩]
							}
							AND = {
								has_authority = auth_shenhai	# 深海|战利品商店||罪企|=不接受分公司
								OR = {
									has_country_flag = pantsu_shop_origin
									has_civic = civic_sh_criminal_syndicate
								}
								NOT = { 
									has_valid_civic = civic_master
								}   #_[多彩]
							}
						}
					}
				}
			}
			### MCA
			hidden_trigger = {
				NAND = {
					has_global_flag = using_mod_more_corporate_authorities
					NOR = {
						NOT = { 
							root = { 
								has_ai_personality = principled_rogues		
								is_ai = yes 
							} 
						}
						owner = { 
							their_opinion = { 
								who = root 
								value < 0 
							} 
						}
						owner = {
							their_opinion = { 
								who = root 
								value < 20 
							}
							NOT = { 
								has_opinion_modifier = { 
									who = root 
									modifier = opinion_new_contact 
									is_reverse = yes 
								} 
							}
						}
					}
				}
			}
			### Ecar
			custom_tooltip = {
				fail_text = BRANCH_OFFICE_NOT_REFORM_AND_OPENING_UP
				NAND = {
					has_global_flag = ideological_revolution	# Ecar激活
					exists = owner
					root = {
						OR = {
							has_valid_civic = civic_state_owned_enterprises
							has_active_tradition = tr_future_economy_soc
						}
					}
					NOR = {
						root = { has_policy_flag = reform_and_opening_up }
						owner = { is_same_value = root }
					}
				}
			}
			Maid_trigger_2_can_build_branch_office_on_planet = yes
			# Futa
			if = {
				limit = { 
					has_global_flag = futa_between_us
				}
				custom_tooltip = {
					fail_text = BRANCH_OFFICE_CRIMINAL_FUTA_RULE
					exists = owner
					OR = {
						root = {
							has_country_flag = ICE_MOON_FUTA
						}
						AND = {
							root = {
								NOT = {
									has_country_flag = ICE_MOON_FUTA
								}
							}
							owner = {
								NOT = {
									has_country_flag = ICE_MOON_FUTA
								}
							}
						}
					}
				}
				custom_tooltip = {
					fail_text = BRANCH_OFFICE_CRIMINAL_ai_RULE
					exists = owner
					OR = {
						root = {
							is_criminal_syndicate = no
						}
						AND = {
							root = {
								is_criminal_syndicate = yes
							}
							owner = {
								NOR = {
									is_country_type = fallen_empire
									is_country_type = awakened_fallen_empire
									is_criminal_syndicate = yes
								}
							}
						}
					}
				}
			}
		}
		AND = { #国防部 MOD
			has_planet_flag = community_mod_rules_trigger
			AND = {
				has_planet_flag = community_can_build_branch_office_on_planet_true
				NOT = { 
					has_planet_flag = community_can_build_branch_office_on_planet_false 
				}
			}
		}
	}
}

###_[ETCPM/hiveDLC/MCA/wsg/ev/azlr/多彩/Ecar]	####################################
# This = country
# Checked by is_criminal_syndicate trigger
is_criminal_syndicate_rule = { #遵循犯罪集团规则
	OR = {
		AND = { # UGRC + 香草 vanilla
			NAND = { #排除条件 Exclusions
				has_country_flag = community_mod_rules_trigger
				OR = {
					has_country_flag = community_is_criminal_syndicate_rule_true
					has_country_flag = community_is_criminal_syndicate_rule_false
				}
			}
			OR = {
				#_|巨企国家|	+ETCPM/hiveDLC/MCA/wsg/ev/多彩/Ecar
				AND = {
					NOR = {
						has_country_flag = ICE_MOON_FUTA_AI
						has_country_flag = ICE_MOON_FUTA
					}
					OR = {
						has_authority = auth_corporate
						has_valid_civic = civic_galactic_sovereign_megacorp

						# ETCPM
						has_authority = auth_private
						# hiveDLC
						has_valid_civic = civic_mutualistic_behavior
						has_valid_civic = civic_machine_trading
						# MCA
						has_authority = auth_corporate_fiefdom
						has_authority = auth_cooperative
						# wsg
						has_authority = auth_warshipgirls
						# Ecar
						has_civic = civic_family_business
						has_civic = civic_world_cooperative
						# 精灵
						if = {
							limit = {
								has_global_flag = futa_between_us
							}
							has_authority = auth_brothel
						}
					}
					OR = {
						has_valid_civic = civic_criminal_heritage
						has_valid_civic = civic_ev_criminal_ship	# ev
						has_valid_civic = civic_corruption_syndicate	# 多彩玩法拓展
						has_valid_civic = civic_semen_pantyhose_brothel # futa
					}
				}
				# |wsg|额外
				has_civic = civic_sh_criminal_syndicate
				# Ecar
				has_valid_civic = civic_underworld_society
				# azlr
				AND = {
					exists = event_target:elizabeth_leader
					has_country_flag = azur_lane_leader_elizabeth
				}
			}
		}
		AND = { #国防部 MOD
			has_country_flag = community_mod_rules_trigger
			AND = {
				has_country_flag = community_is_criminal_syndicate_rule_true
				NOT = { has_country_flag = community_is_criminal_syndicate_rule_false }
			}
		}
	}
}

###_[轨道轰炸]	FW/AUP/Teif/ev/wsg/swg/阿夸/古代帝国/失落帝国历史/多彩/TAC/SRA	/ACOT/SOFE/bwm/HFE/Giga/Ehof/RSnf/MEM/SSNI	#########
#This rule is a condition for bombarding planets
#Root = fleet, potential attacker
#From = planet, potential target
can_orbital_bombard = {
	OR = {
		AND = {
			NAND = { #排除条件 Exclusions
				ROOT.CONTROLLER = {
					has_country_flag = community_mod_rules_trigger
					OR = {
						has_country_flag = community_can_orbital_bombard_true
						has_country_flag = community_can_orbital_bombard_false
					}
				}
			}
			exists = FROM.OWNER
			###_|禁止条件|	+RSnf/阿夸
			NOR = {
				any_controlled_ship = {
					OR = {
						is_ship_size = colossus
						is_ship_size = fe_colossus         #_teif
					}	
				}
				# RSnf
				FROM = { 
					OR = {
						is_planet_class = pc_hollow 
						has_modifier = "underground_world"
						has_modifier = "ice_world"
					}
					
				}
				# 阿夸
				FROM.OWNER = { 
					is_country_type = kuat_fire_base_hositle 
				}
				FROM = { 
					has_planet_flag = enable_kuat_shield 
				}
			}
			##_|特殊星球|	FW/Teif/MOP_M
			#	此类星球只在特定情况下允许轨道轰炸
			NAND = {
				FROM = {
					OR = {
						is_planet_class = pc_shielded_gaia		# Teif
						has_building = building_training_bomboardment	# MOP_M
					}
				}
				ROOT.OWNER = {
					NOR = {
						is_country_type = extradimensional
						is_country_type = extradimensional_2
						is_country_type = extradimensional_3
						is_country_type = swarm
						is_country_type = ai_empire
						is_country_type = cybrex_empire
						is_country_type = gray_goo
						is_country_type = dormant_marauders
						is_country_type = marauder_raiders
						is_country_type = ruined_marauders
						is_country_type = vol
						# futa
						is_country_type = ICE_MOON_dormant_marauders
						is_country_type = ICE_MOON_ruined_marauders
						is_country_type = ICE_MOON_momo_fleet
						AND = {
							is_country_type = awakened_marauders
							FROM.CONTROLLER = {
								NAND = {
									is_subject_with_preset = { 
										PRESET = preset_satrapy 
									}
									NOT = { 
										has_country_flag = rebelling_satrapy 
									}
								}
							}
						}
					}
				}
			}
		
			###_|基本条件|
			OR = {
				AND = {
					ROOT.CONTROLLER = {
						NOT = { 
							has_communications = FROM.OWNER 
						}
					}
					FROM.OWNER = {
						NOT = { 
							is_country_type = primitive 
						}
					}
				}
				AND = {
					ROOT.CONTROLLER = {
						NOR = {
							has_policy_flag = interference_not_allowed
							has_policy_flag = interference_subtle
						}
					}
					FROM.OWNER = { 
						is_country_type = primitive 
					}
				}
				ROOT.CONTROLLER = { 
					is_at_war_with = FROM.CONTROLLER 
				}
				#	AUP/HFE
				ROOT.CONTROLLER = { 
					is_hostile = FROM.CONTROLLER 
				}
				#_|V可随意轰炸|	+bwm
				FROM = {
					OR = {
						is_planet_class = pc_infested
						has_planet_flag = bwm_ancestor_world			# bwm
					}
				}
				#	TAC		---禁用|高能耗|
			#	ROOT = { has_component = AI_MATRICES }
				##_|可被轰炸|	+古代帝国/SOFE/bwm/Giga/Ehof/阿夸/多彩
				FROM.CONTROLLER = {
					OR = {
						#	VANILLA
						is_country_type = swarm
						is_country_type = ai_empire
						is_country_type = cybrex_empire
						AND = {
							is_country_type = awakened_marauders
							ROOT.CONTROLLER = { 
								is_hostile = prev 
							}
						}
						
						has_country_flag = UGRC_flg_cntr_RULE_can_be_bombed	# UGRC
						is_country_type = mem_ancestor_guardian				# bwm
						is_country_type = original_empire					# SOFE
						is_country_type = compound_empire					# Giga/Ehof
						is_country_type = void_lifeforms_1					# Giga/ACOT
						is_country_type = void_lifeforms_2					# Giga/ACOT
						is_country_type = katzenartig_imperium				# Giga/ACOT
						if = {												# 古代帝国	安装=|has_ancient_empire_mod|
							limit = {
								has_global_flag = has_ancient_empire_mod 
							}
							ag_can_be_orbital_bombardment_country = yes
						}
						else = {
							always = no
						}
						if = {											# 阿夸		安装=|install_kuat_mod|
							limit = {
								has_global_flag = install_kuat_mod 
							}
							kuat_can_be_orbital_bombarment_country = yes
						}
						else = {
							always = no
						}
						if = {											# 多彩		安装=|love_between_us|
							limit = {
								has_global_flag = love_between_us
							}
							is_country_type = ten_crisis_empire
						}
						else = {
							always = no
						}				
					}
				}
				##_|可以轰炸|	+Teif/ev/wsg/swg/阿夸/古代帝国/失落帝国历史/多彩		/SOFE/bwm/Giga/Ehof
				ROOT.CONTROLLER = {
					OR = {
						#	VANILLA
						is_country_type = extradimensional
						is_country_type = extradimensional_2
						is_country_type = extradimensional_3
						is_country_type = swarm
						is_country_type = ai_empire
						is_country_type = cybrex_empire					# <aup去除了此项>
						is_country_type = dormant_marauders
						is_country_type = marauder_raiders
						is_country_type = ruined_marauders
						is_country_type = debt_collectors
						# Futa
						is_country_type = ICE_MOON_dormant_marauders
						is_country_type = ICE_MOON_ruined_marauders
						
						is_country_type = gray_goo
						is_country_type = vol
						AND = {
							is_country_type = awakened_marauders
							FROM.CONTROLLER = { 
								is_hostile = prev 
							}
						}
						
						has_country_flag = UGRC_flg_cntr_RULE_can_bomb	# UGRC
						is_country_type = mercenary_fleet				# Teif
						is_country_type = ev_leviathans_crisis			# ev
						is_country_type = afk_crisis_country			# swg
						is_country_type = LsE_fallen_empire				# 失落帝国历史
						#	多彩
						if = {
							limit = {
								has_global_flag = love_between_us
							}
							is_country_type = ten_crisis_empire
						}	
						else = {
							always = no
						}		
						#	wsg
						if = {
							limit = {
								has_global_flag = has_wsg_mod
							}
							OR = {
								is_country_type = wg_crisis_country
								is_khan_country_type = yes
							}
						}
						else = {
							always = no
						}
						if = {											# 古代帝国	安装=|has_ancient_empire_mod|
							limit = {
								has_global_flag = has_ancient_empire_mod 
							}
							ag_can_do_orbital_bombardment_country = yes
						}
						else = {
							always = no
						}
						if = {											# 阿夸		安装=|install_kuat_mod|
							limit = {
								has_global_flag = install_kuat_mod 
							}
							kuat_can_do_bombarment_country = yes
						}
						else = {
							always = no
						}
						is_country_type = mem_ancestor_guardian			# bwm
						is_country_type = original_empire				# SOFE
						#	Giga/Ehof
						is_country_type = compound_empire
						is_country_type = void_lifeforms_1
						is_country_type = void_lifeforms_2
						is_country_type = acot_crazed_stellarite
						is_country_type = katzenartig_imperium
						#	MEM
						is_country_type = mem_surveyor_country_red		# 瓦祖兰
						is_country_type = mem_vazurans
						#	SRA
						SRA_can_do_orbital_bombardment_country = yes
						#	SSNI
						is_country_type = sentinel_hostile_expansion
					}
				}
				#_星球所有者轰炸被其他阵营占据的星球	-SOFE<去掉了此项>
				AND = {
					from.controller = {
						is_country_type = faction
						NOT = { 
							is_same_value = ROOT.CONTROLLER 
						}
					}
					from.owner = {
						is_same_value = ROOT.CONTROLLER
					}
				}
			}
		}
		AND = { #国防部
			exists = FROM.OWNER
			ROOT.CONTROLLER = {
				has_country_flag = community_mod_rules_trigger
				AND = {
					has_country_flag = community_can_orbital_bombard_true
					NOT = { 
						has_country_flag = community_can_orbital_bombard_false 
					}
				}
			}
			FROM = {
				NOT = { 
					has_planet_flag = community_can_orbital_bombard_exclude 
				}
			}
		}
	}
}

###	wsg/AUP/ETCPM/PTep/多彩/SC/魔女		(如果有问题就恢复vanilla)
#_pop_trgr	[ariphaos_patch_slaves_expel]
# ROOT = country
# THIS = pop
can_be_sold_on_slave_market = { #可在奴隶市场出售
	OR = {
		AND = { # UGRC + 香草 vanilla
			NAND = { #排除条件 Exclusions
				has_pop_flag = community_mod_rules_trigger
				OR = {
					has_pop_flag = community_can_be_sold_on_slave_market_true
					has_pop_flag = community_can_be_sold_on_slave_market_false
				}
			}
			exists = owner
			OR = {
				is_enslaved = yes
				is_non_sapient_robot = yes
				is_shackled_robot = yes
				is_being_purged = yes	# AUP
				# ETCPM
				AND = {
					has_job = servant_noble
					ROOT = { 
						allows_slavery = yes
					}
				}
			}
			#	ETCPM
			if = { 
				limit = { 
					has_global_flag = expanded_pops_active 
				}	#_|激活|
				NOT = { 
					owner = { 
						has_country_flag = gai_machines_have_organics 
					} 
				}
				OR = {
					ROOT = { 
						is_ai = no 
					}
					AND = {
						OR = { 
							is_unemployed = yes		
							has_job = servant_noble 
						}
						planet = {
							count_owned_pop = {
								count > 2
								limit = {
									OR = { 
										is_unemployed = yes		
										has_job = servant_noble 
									}
									NOR = {
										is_pop_category = specialist
										is_pop_category = ruler
									}
								}
							}
						}
					}
					AND = {
						OR = { 
							has_job = servant 
							has_job = servant_noble 
						}
						planet = {
							free_amenities > 20
						}
					}
				}
			}
			# ntr相关_[wsg/多彩/SC ]
			NOR = {
				if = {
					limit = {
						has_global_flag = has_wsg_mod
					}
					has_wg_traits = yes
					species = {
						OR = {
							is_archetype = WARSHIPGIRL
							is_archetype = SHENHAI
							is_archetype = UNITED_FLEET
							is_archetype = NANITES_CROP
						} 
					}
					if = {
						limit = {
							has_global_flag = love_between_us
						}
						NOR = {
							has_trait = trait_DC_ethic_carnalism
							has_trait = trait_DC_ethic_asceticism
						}
					}
				}
				else = {
					always = no
				}
				if = {
					limit = {
						has_global_flag = has_swgs_mod
					}
					species = { 
						NOT = {
							is_archetype = STARSHIPGIRLS
						}
					}
					if = {
						limit = {
							has_global_flag = love_between_us
						}
						NOR = {
							has_trait = trait_DC_ethic_carnalism
							has_trait = trait_DC_ethic_asceticism
						}
					}
				}
				else = {
					always = no
				}
			}
			#	PTep
			NOT = { 
				has_trait = trait_plentiful_traditions_pt_cocoon 
			}
			#	多彩
			if = {
				limit = {
					has_global_flag = love_between_us
				}
				can_infest_pops_dc = no
			}
			#	魔女
			NOR = {
				has_trait = trait_servitude
				has_trait = trait_reanimated_materials
			}

			##	+AUP	############################################
			OR ={
				ariphaos_patch_slaves_expel = yes	# AUP
				ROOT = { 
					is_ai = no 
				}
				has_citizenship_rights = no
				##	+AUP
				AND = {
					is_being_assimilated = no		# AUP
					is_unemployed = yes
					planet = {
						num_unemployed > 2			# AUP	|v=3|
					}
					# AUP
					OR = {
						NOT = { 
							has_trait = trait_syncretic_proles 
						}
						ROOT = { 
							NOT = { 
								has_origin = origin_syncretic_evolution 
							} 
						}
					}
				}
			}
			if = {
				limit = {
					has_global_flag = organic_slave_trade_banned_flag
				}
				is_organic_species = no
			}
			if = {
				limit = {
					has_global_flag = sentient_slave_trade_banned_flag
				}
				is_sapient = no
			}
			NOR = {
				# Since they can't reproduce, they die out too fast for anyone to want to buy them.
				has_trait = trait_clone_soldier_infertile
				has_trait = trait_clone_soldier_infertile_full_potential
			}
		}
		AND = { #国防部 MOD
			has_pop_flag = community_mod_rules_trigger
			AND = {
				has_pop_flag = community_can_be_sold_on_slave_market_true
				NOT = { 
					has_pop_flag = community_can_be_sold_on_slave_market_false 
				}
			}
		}
	}
}

###_[传感阻碍]
###_[FW/LCTR/RS星云/Sexp		/wsg/古代帝国/ws/SMCO/S_tnatc/莉莉]	####################################
#_sys_trgr	ws_[is_ws_system]
# this = system
# root = country
system_blocks_sensors = { #阻断探测星系
	if = {
		limit = {
			has_star_flag = can_enable_can_be_system_blocks_sensors
		}
		always = yes
	}
	else = {
		OR = {
			AND = { # UGRC + 香草 vanilla
				NAND = { #排除条件 Exclusions
					has_star_flag = community_mod_rules_trigger
					OR = {
						has_star_flag = community_system_blocks_sensors_true
						has_star_flag = community_system_blocks_sensors_false
					}
				}
				###	LCTR
				root = { 
					NOT = { 
						has_country_flag = LCTR_flg_cntr_RELIC_activated 
					} 
				}
				### z_lctr
				root = {
					NOT = {
						has_modifier = z_lctr_mod_cntr_sensor			
					}
				}
				###	VANILLA
				OR = {
					##_|星云|	+Sexp/RS
					AND = {
						OR = {
							is_inside_nebula = yes
							has_modifier = space_storm
							has_modifier = zroni_storm
							#	|RS|
							is_star_class = sc_collapsar
							is_star_class = sc_p_purple
							is_star_class = sc_p_green
							is_star_class = sc_p_red
						}
						ROOT = { 
							NOT = { 
								has_technology = tech_ariphaos_sensors_nebula 
							} 
						}	# Sexp
					}
					##_|封印星系|	+Sexp
					AND = {
						OR = {
							has_star_flag = lcluster
							has_star_flag = sealed_system
						}
						ROOT = { 
							NOT = { 
								has_technology = tech_ariphaos_sensors_sealed 
							} 
						}	# Sexp
					}
	
					##	Sexp
					if = {
						limit = {
							has_global_flag = ariphaos_sensors_installed
						}
						AND = {
							OR = {
								is_star_class = sc_binary_2
								is_star_class = sc_neutron_star
							}
							ROOT = { 
								NOT = { 
									has_technology = tech_sensors_4 
								} 
							}
						}
						AND = {
							OR = {
								is_star_class = sc_binary_1
								is_star_class = sc_pulsar
							}
							ROOT = { 
								NOT = { 
									has_technology = tech_ariphaos_sensors_pulsar 
								} 
							}
						}
						AND = {
							has_natural_wormhole = yes
							ROOT = { 
								NOT = { 
									has_technology = tech_ariphaos_sensors_wormhole 
								} 
							}
						}
						AND = {
							is_star_class = sc_black_hole
							ROOT = { 
								NOT = { 
									has_technology = tech_ariphaos_sensors_black_hole 
								} 
							}
						}
						AND = {
							exists = starbase
							starbase = { 
								has_starbase_building = ariphaos_sensors_jammer_starbase 
							}
							ROOT = { 
								NOT = { 
									has_technology = tech_ariphaos_sensors_jammed 
								} 
							}
						}
					}
					else = {
						always = no
					}
					#	S_tnatc
					AND = { 
						exists = space_owner
						space_owner = { 
							has_relic = r_invisibility_rune 
						}
						NOT = {
							root = { 
								is_same_empire = prev.space_owner 
							} 
						}
					}
					#	WS
					is_ws_system = yes
					#	wsg
					has_star_flag = wg_sealed_system
					has_star_flag = wg_psionic_systems
					#	teif
					has_star_flag = fallen_sol_system
					root = { 
						is_country_type = teif_primitive 
					}
					#	古代帝国
					has_star_flag = ag_no_sensor_system
					#	ag
					has_star_flag = ag_no_sensor_system
					#	SMCO
					has_star_flag = bok_globules
					has_star_flag = star_flag_GAPS_sealed_system
					#	莉莉
					has_star_flag = Uberzain
					AND = {
						exists = sector
						sector = {
							exists = leader
							leader = {
								OR = {
									has_trait = leader_trait_AL_Rareskill_governor_Uberzain
									has_trait = leader_trait_AL_Rareskill_governor_UberzainS
									has_trait = leader_trait_AL_Rareskill_governor_UberzainEX
								}
							}
						}
					}
				}
			}
			AND = { #国防部 MOD
				has_star_flag = community_mod_rules_trigger
				AND = {
					has_star_flag = community_system_blocks_sensors_true
					NOT = { 
						has_star_flag = community_system_blocks_sensors_false 
					}
				}
			}
		}
	}	
}

###_[星系跃迁限制]	FW/AAR	/古代帝国/wsg/阿夸/SOFE/Giga/Ehof/seooc/多彩/TAC/莉莉	####################################
# Root = country attempting to target system for movement
# This = system being targeted
can_enter_system_by_jump = { #可跃迁进入星系
	OR = {
		AND = { # UGRC + 香草 vanilla
			NAND = { #排除条件 Exclusions
				has_star_flag = community_mod_rules_trigger
				OR = {
					has_star_flag = community_can_enter_system_by_jump_true
					has_star_flag = community_can_enter_system_by_jump_false
				}
			}
			custom_tooltip = {
				# success_text = "debug: can jump"
				fail_text = cannot_jump_to_system
				OR = {
					###_绝对通行	FW
					root = {
						OR = {
							has_country_flag = FW_flg_cntr_CHT_orrery_ON		# 璀璨星图
							has_country_flag = FW_flg_cntr_CHT_beacon_ON		# 永恒星炬
						}
					}
					###_特殊通行	+AAR/TAC/多彩
					root = {
						#	|禁止条件|
						#	|通行可用|
						OR = {
							has_country_flag = AAR_flg_cntr_JUMP_webway_TGT		# |AAR|网道行者
							has_country_flag = TAC_traveler						# |TAC|
							has_country_flag = wtmnb_order						# wtmnb
						}
					}

					###_基础条件
					AND = {
						# Teif
						NOT = { 
							root = { 
								is_country_type = teif_primitive 
							} 
						}
		
						##_Sealed system
						OR = {
							## +Teif
							NOR = {
								has_star_flag = sealed_system
								has_star_flag = fallen_sol_system	# Teif
							}
							# Teif
							AND = {
								root = { 
									has_country_flag = entered_fallen_sol_system 
								}
								has_star_flag = fallen_sol_system
							}
							# vanilla
							NOT = { 
								has_star_flag = sealed_system 
							}
							AND = {
								root = { 
									has_country_flag = entered_sealed_system 
								}
								has_star_flag = sealed_system
							}
						}

						##_特殊禁入星系		+wsg/古代帝国/阿夸/SOFE/Giga/Ehof/seooc/多彩/TAC/莉莉
						NOR = {
							# 精灵
							has_star_flag = ELF_Singularity_System

							# vanilla
							has_star_flag = lcluster

							# wsg
							if = { 
								limit = {
									has_global_flag = has_wsg_mod	# 舰r激活
								}
								OR = {
									has_star_flag = wg_sealed_system
									has_star_flag = wg_psionic_systems
									AND = { exists = space_owner
										space_owner = { 
											is_country_type = monolith_crisis_country 
										}
									}
								}
							}
							else = {
								always = no
							}
							#	古代帝国
							has_star_flag = ag_no_jump_in_system
							#	阿夸
							has_star_flag = kuat_initial_system
							has_star_flag = Kuat_empire_system
							has_star_flag = ag_kae_e_area_system
							has_star_flag = kuat_initial_system
							has_star_flag = Kuat_system
							has_star_flag = Kuat_system_1
							has_star_flag = Kuat_system_2
							has_star_flag = Kuat_system_3
							has_star_flag = Kuat_system_int
							has_star_flag = Kuat_system_int_1
							has_star_flag = Kuat_system_int_2
							has_star_flag = Kuat_system_int_3
							has_star_flag = Kuat_system_int_4
							if = {
								limit = {
									has_global_flag = starkillerbase_not_passed
								}
								has_star_flag = starkiller_system
							}
							else = {
								always = no
							}
							#	SOFE
							has_star_flag = outercluster
							#	Giga
							has_star_flag = ehof_compound_system
							has_star_flag = giga_core_03
							cohesive_system = yes
							urmazin_system = yes
							everchanging_system = yes
							katzen_jump_blocked_system = yes
							#	seooc
							has_star_flag = nep_Krahen_cluster
							has_star_flag = nep_Scrus_cluster
							if = {
								limit = {
									has_global_flag = nep_not_pass_Aemethms
								}
								OR = {
									has_star_flag = nep_dragon_system
									has_star_flag = nep_heptagram_cluster
								}
							}
							else = {
								always = no
							}
							has_star_flag = ELF_Singularity_System
							#	多彩
							if = {
								limit = {
									has_global_flag = love_between_us
								}			
								# 淫触之虫母星系					
								OR = {
									has_star_flag = ten_crisis_system
									any_neighbor_system = { 
										has_star_flag = ten_crisis_system 
									}
								}
								NOR = {
									exists = event_target:holylight_god_heaven_empire 
									OR = {
										has_star_flag = SUC_lustgod_ring_world_system
										has_star_flag = init_sample_of_death
										has_star_flag = init_sample_of_prosperity
										has_star_flag = init_INN_holylight_god_system2
									}
								}
							}
							else = {
								always = no
							}
							#	wtmnb
							has_star_flag = wtmnb_star_11th		
							#	TAC
						#	has_star_flag = AI_system1
						#	has_star_flag = AI_system2
						#	has_star_flag = AI_system3
						#	has_star_flag = AI_system4
						#	this = {
						#		OR = {
						#			has_megastructure = AIgate_opened
						#			has_megastructure = AIgate_opened_02
						#		}
						#	}
						#	莉莉
							has_star_flag = al_huge_home_bed
						}
					}
				}
			}
		}
		AND = { #国防部 MOD
			has_star_flag = community_mod_rules_trigger
			AND = {
				has_star_flag = community_can_enter_system_by_jump_true
				NOT = { 
					has_star_flag = community_can_enter_system_by_jump_false 
				}
			}
		}
	}
}

###_[可跃迁]	FW/古代帝国/seooc/莉莉	####################################
#_|通用禁行|	futa
# THIS = Fleet
can_jump_drive = { #可以跃迁
	custom_tooltip = {
	fail_text = "SUGL_can_jump_drive_fasle_tip"
		OR = {
			AND = { # UGRC + 香草 vanilla
				AND = { #排除条件 Exclusions
					NAND = { #排除条件 Exclusions
						has_fleet_flag = community_mod_rules_trigger
						OR = {
							has_fleet_flag = community_can_jump_drive_true
							has_fleet_flag = community_can_jump_drive_false
						}
					}
					solar_system = {
						NAND = { #排除条件 Exclusions
							has_star_flag = community_mod_rules_trigger
							OR = {
								has_star_flag = community_can_jump_drive_true
								has_star_flag = community_can_jump_drive_false
							}
						}
					}
					owner = {
						NAND = {
							has_country_flag = community_mod_rules_trigger
							OR = {
								has_country_flag = community_can_jump_drive_true
								has_country_flag = community_can_jump_drive_false
							}
						}
					}
				}
			#	always = yes	# Moved cooldown to code
				exists = solar_system
			
				# FW
				if = {
					limit = {
						OR = {
							has_fleet_flag = FW_flg_flt_JUMP	# FW特殊跃迁flt
							controller = {
								OR = {
									has_country_flag = FW_flg_cntr_CHT_orrery_ON		# 璀璨星图
									has_country_flag = FW_flg_cntr_CHT_beacon_ON		# 永恒星炬
								}
							}
						}
					}
					always = yes
				}
				# 古代帝国
				else_if = { 
					limit = { 
						solar_system = { 
							has_star_flag = ag_no_jump_out_system 
						} 
					}
					custom_tooltip = { 
						fail_text = ag_jump_drive_unable_system_tooltip
						always = no
					}
				}
				# seooc
				else_if = { 
					limit = { 
						solar_system = { 
							has_star_flag = nep_Scrus_cluster 
						} 
					}
					custom_tooltip = { 
						fail_text = "CAN_NOT_JUMP_WHEN_IN_SCRUS"
						always = no
					}
				}
				else_if = {
					limit = {
						solar_system = {
							OR = {
								has_star_flag = nep_whitegoo_1
								has_star_flag = nep_whitegoo_2
								has_star_flag = nep_whitegoo_3
							}
						}
						owner = { 
							NOT = { 
								has_technology = tech_nep_whitegoo_3_2 
							} 
						}
					}
					custom_tooltip = { 
						fail_text = "CAN_NOT_JUMP_IN_WHITEGOO"
						always = no
					}
				}
				# 莉莉		<运行负担>
			#	else_if = {
			#		limit = {
			#			solar_system = {
			#				exists = starbase
			#				starbase = {
			#					has_starbase_building = AL_AntiFTL
			#					owner = { 
			#						is_hostile = prevprevprev.owner 
			#					}
			#				}
			#			}
			#		}
			#		custom_tooltip = {
			#			text = "AL_cannot_start_jump"
			#			always = no
			#		}
			#	}
				# 其他
				else = {
					always = yes
				}
			}
			AND = { #国防部 MOD
				OR = {
					AND = { #舰队判定
						has_fleet_flag = community_mod_rules_trigger
						AND = {
							has_fleet_flag = community_can_jump_drive_true
							NOT = { has_fleet_flag = community_can_jump_drive_false }
						}
					}
					solar_system = { #星系判定
						has_star_flag = community_mod_rules_trigger
						AND = {
							has_star_flag = community_can_jump_drive_true
							NOT = { has_star_flag = community_can_jump_drive_false }
						}
					}
					owner = { #国家判定
						has_country_flag = community_mod_rules_trigger
						AND = {
							has_country_flag = community_can_jump_drive_true
							NOT = { has_country_flag = community_can_jump_drive_false }
						}
					}
				}
			}
		}
	}
	#_|通用禁行|	futa
	NOT = {
		custom_tooltip_fail = {
			text = CAN_NOT_JUMP_IN_ELF_Singularity_System
			exists = solar_system
			solar_system = {
				has_star_flag = ELF_Singularity_System
			}
		}
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_ruler_job
can_fill_ruler_job = { #可作为统治者的pop
	OR = {
		AND = { #香草 vanilla & 多彩 CG
			NAND = { #排除条件 Exclusions
				has_pop_flag = community_mod_rules_trigger
				OR = {
					has_pop_flag = community_can_fill_ruler_job_true
					has_pop_flag = community_can_fill_ruler_job_false
				}
			}
			if = {
				limit = {
					exists = owner
					owner = {
						has_origin = origin_necrophage
						has_trait = trait_necrophage
					}
				}
				custom_tooltip = {
					text = RULER_JOB_NECROPHAGE_TRIGGER
					has_trait = trait_necrophage
					OR = {
						is_enslaved = no
						owner = {
							has_valid_civic = civic_all_slave
						}
					}
					is_being_purged = no
					is_being_assimilated = no
				}
			}
			else_if = {
				limit = {
					exists = owner
					owner = {
						is_gestalt = yes
						has_country_flag = carnalism_flag
					}
					is_being_purged = no
					is_enslaved = no
					is_being_assimilated = no
					NOT = {
						has_citizenship_type = {
							type = citizenship_organic_trophy
						}
					}
				}
			}
			else = {
				custom_tooltip = RULER_JOB_TRIGGER
				hidden_trigger = {
					NOT = { 
						has_ethic = ethic_gestalt_consciousness 
					}
					exists = owner
					OR = {
						is_enslaved = no
						owner = {
							has_valid_civic = civic_all_slave
						}
					}
					is_being_purged = no
					is_being_assimilated = no
					NOT = { 
						has_trait = trait_syncretic_proles 
					}
					can_think = yes
					OR = {
						NOT = { 
							has_trait = trait_mechanical 
						}
						AND = {
							owner = { 
								has_technology = tech_synthetic_workers 
							}
							owner = { 
								has_policy_flag = ai_full_rights 
							}
						}
					}
					NOT = { 
						has_citizenship_type = { 
							type = citizenship_organic_trophy 
						} 
					}
					if = {
						limit = {
							divinity_right_to_work_job_check_trigger_exempt = no
						}
						divinity_right_to_work_job_check_trigger_ruler = yes
					}
				}
				#	GF
				if = { 
					limit = { 
						has_trait = GF_trait_doll 
					}
					owner = {
						OR = {
							NOT = { 
								has_authority = GF_auth_commonwealth 
							}
							has_policy_flag = GF_doll_work_policy_high
							has_policy_flag = GF_doll_work_policy_free
						}
					}
				}
			}
			# 时与空
			hidden_trigger = {
				NOT = { 
					has_citizenship_type = { 
						type = citizenship_adeptus_mechanicus 
					} 
				}
			}
		}
		AND = { #国防部 MOD
			has_pop_flag = community_mod_rules_trigger
			AND = {
				has_pop_flag = community_can_fill_ruler_job_true
				NOT = { 
					has_pop_flag = community_can_fill_ruler_job_false 
				}
			}
		}
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_specialist_job
can_fill_specialist_job = { #可作为专家的pop #奇妙的条件?
	OR = {
		AND = { #香草 vanilla
			NAND = { #排除条件 Exclusions
				has_pop_flag = community_mod_rules_trigger
				OR = {
					has_pop_flag = community_can_fill_specialist_job_true
					has_pop_flag = community_can_fill_specialist_job_false
				}
			}
			# vanilla
			can_fill_specialist_job = yes
			# GF
			if = {
				limit = { has_trait = GF_trait_doll }
				owner = {
					OR = {
						NOT = { 
							has_authority = GF_auth_commonwealth 
						}
						has_policy_flag = GF_doll_work_policy_high
						has_policy_flag = GF_doll_work_policy_free
						has_policy_flag = GF_doll_work_policy_middle
					}
				}
			}
			# 时与空
			hidden_trigger = {
				NOT = { 
					has_citizenship_type = { 
						type = citizenship_adeptus_mechanicus 
					} 
				}
			}
		}
		AND = { #国防部 MOD
			has_pop_flag = community_mod_rules_trigger
			AND = {
				has_pop_flag = community_can_fill_specialist_job_true
				NOT = { has_pop_flag = community_can_fill_specialist_job_false }
			}
		}
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_worker_job
can_fill_worker_job = { #可作为工人的pop
	OR = {
		AND = { #香草 vanilla
			NAND = { #排除条件 Exclusions
				has_pop_flag = community_mod_rules_trigger
				OR = {
					has_pop_flag = community_can_fill_worker_job_true
					has_pop_flag = community_can_fill_worker_job_false
				}
			}
			# vanilla
			custom_tooltip = WORKER_JOB_TRIGGER
			hidden_trigger = {
				NOT = { 
					has_ethic = ethic_gestalt_consciousness 
				}
				exists = owner
				is_being_purged = no
				is_being_assimilated = no
				NOT = { 
					has_citizenship_type = { 
						type = citizenship_organic_trophy 
						country = owner
					} 
				}
				NAND = {
					has_citizenship_type = { 
						type = citizenship_slavery 
					}
					OR = {
						has_slavery_type = { 
							type = slavery_livestock 
						}
						has_slavery_type = { 
							type = slavery_matrix 
						}
					}
				}
				if = {
					limit = {
						divinity_right_to_work_job_check_trigger_exempt = no
					}
					divinity_right_to_work_job_check_trigger_worker = yes
				}
			}
			# 时与空
			hidden_trigger = {
				NOT = { 
					has_citizenship_type = { 
						type = citizenship_adeptus_mechanicus 
					} 
				}
			}
		}
		AND = { #国防部 MOD
			has_pop_flag = community_mod_rules_trigger
			AND = {
				has_pop_flag = community_can_fill_worker_job_true
				NOT = { 
					has_pop_flag = community_can_fill_worker_job_false 
				}
			}
		}
	}
}

should_planetary_automate = {
	always = yes
}

###_|产生领袖|	FW/GF/无言/Ereb/hiveDLC/PTep/Eevt/ETCPM/莉莉/Ecar/rmaid/魔女/多彩
#Checks whether any leaders (scientists etc) can be formed from this pop
#Root = country
#This = pop
can_generate_leader_from_pop = { #可从pop中生成领袖
	if = {
		limit = { 
			has_pop_flag = can_enable_can_generate_leader_from_pop
		}
		always = yes
	}
	else = {
		OR = {
			AND = { # UGRC + 香草 vanilla
				NAND = { #排除条件 Exclusions
					has_pop_flag = community_mod_rules_trigger
					OR = {
						has_pop_flag = community_can_generate_leader_from_pop_true
						has_pop_flag = community_can_generate_leader_from_pop_false
					}
				}
				if = {
					limit = {
						NAND = {
							has_trait = GF_trait_doll
							root = { 
								has_authority = GF_auth_commonwealth 
							}
						}
					}
					has_citizenship_rights = yes
				}
				NOT = { 
					has_trait = trait_syncretic_proles 
				}
				can_think = yes
				## +无言/Ereb/hiveDLC/PTep/Eevt/ETCPM
				NOR = {
					has_trait = trait_syncretic_proles
					# 无言
					has_trait = trait_protoss_probe
					# Ecar
					has_trait = trait_flesh_components
					# Ereb
					has_trait = trait_slave_gene
					# hiveDLC
					root = { 
						has_origin = origin_hive_overmind 
					}
					# PTep
					has_trait = trait_plentiful_traditions_pt_cocoon
					# Eevt/ETCPM
					has_trait = trait_memorex_comatos
					has_trait = trait_infested_basic
					# 莉莉
					has_trait = trait_AL_puffer
					# 魔女
					has_trait = trait_servitude
				}
				## +GF/魔女
				OR = {
					is_robot_pop = no
					root = {
						OR = {
							has_technology = tech_synthetic_leaders
							has_authority = auth_machine_intelligence
							is_mechanical_empire = yes
							#   GF
							has_policy_flag = GF_doll_right_full
							has_policy_flag = GF_doll_right_limited
							#	魔女
							has_technology = tech_dummy_leaders
						}
					}
				}
				OR = {
					is_same_species = root
					root = {
						NAND = {
							has_origin = origin_necrophage
							has_trait = trait_necrophage
						}
					}
				}
				##	rmaid
				if = {
					limit = {
						has_global_flag = flag_rogue_maid_mod_activated
						root = { 
							has_civic = civic_machine_servitor 
						}
					}
					is_same_species = root
				}
				##多彩 
				#淫触之虫，拥有思维寄生科技后，允许次级物种生成领袖
				if = {
					limit = { 
						has_global_flag = love_between_us 
					}
					OR = {
						NOT = { 
							is_species_class = PAR 
						}
						AND = {
							root = {
								has_country_flag = parasite_mind_flag
								has_technology = tech_tentacle_coop
							}
							is_species_class = PAR
						}
					}
					
				}
			}
			AND = { #国防部 MOD
				has_pop_flag = community_mod_rules_trigger
				AND = {
					has_pop_flag = community_can_generate_leader_from_pop_true
					NOT = { 
						has_pop_flag = community_can_generate_leader_from_pop_false 
					}
				}
			}
		}
	}
}

###_[解雇领袖]	SC/Ecar	####################################
# this = leader
can_dismiss_leader = { #可以开除领袖
	OR = {
		AND = { # UGRC + 香草 vanilla
			OR = { #排除条件 Exclusions
				NAND = { #排除条件 Exclusions
					has_leader_flag = community_mod_rules_trigger
					OR = {
						has_leader_flag = community_can_dismiss_leader_true
						has_leader_flag = community_can_dismiss_leader_false
					}
				}
				NAND = { #排除条件 Exclusions
					exists = owner
					owner = {
						has_country_flag = community_mod_rules_trigger
						OR = {
							has_country_flag = community_can_dismiss_leader_country_true
							has_country_flag = community_can_dismiss_leader_country_false
						}
					}
				}
			}
			if = {
				limit = {
					leader_class = admiral
					is_idle = no
					# Rulers and heirs can't be dismissed any way and can be non-idle
					is_ruler = no
					is_heir = no
				}
				custom_tooltip = {
					fail_text = "requires_fleet_control"
					exists = fleet
					fleet = {
						controller = {
							is_same_value = prev.owner
							is_same_value = prevprev.owner
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						is_heir = yes
						is_ruler = yes
					}
				}
				custom_tooltip = {
					always = no
					fail_text = "can_not_dismiss_rulers"
				}
			}
			# SC
			custom_tooltip = {
				fail_text = "cannot_fire_StellarisCraft_leader"
				NOT = { 
					has_leader_flag = StellarisCraft_event_leader 
				}
			}
			# Ecar
			custom_tooltip = {
				fail_text = "requires_actor_not_coalition_government_society"
				exists = owner
				owner = {
					NOT = { 
						has_valid_civic = civic_coalition_government 
					}
				}
			}
			# 莉莉
			custom_tooltip = {
				fail_text = "requires_not_special_lily_leader"
				NOT = { 
					has_leader_flag = AL_special_lily_leader 
				}
			}
			# WSG
			custom_tooltip = {
				fail_text = "cannot_fire_wg_leader"
				NOT = { 
					has_leader_flag = wsg_event_leader 
				}
				is_special_affection_leader = no
			}
		}
		AND = { #国防部 MOD
			OR = {
				AND = {
					has_leader_flag = community_mod_rules_trigger
					AND = {
						has_leader_flag = community_can_dismiss_leader_true
						NOT = { 
							has_leader_flag = community_can_dismiss_leader_false 
						}
					}
				}
				AND = {
					owner = {
						has_country_flag = community_mod_rules_trigger
						AND = {
							has_country_flag = community_can_dismiss_leader_country_true
							NOT = { 
								has_country_flag = community_can_dismiss_leader_country_false 
							}
						}
					}
				}
			}
		}
	}
}

###_|释放附庸物种|	GF/PTep/ETCPM/Eevt/Ecar/rmaid/多彩	####################################
#Root = species
#This = country
can_release_vassal_from_species = { #可以从物种释放附庸
	OR = {
		AND = { # UGRC + 香草 vanilla
			root = { #排除条件 Exclusions
				NAND = { #排除条件 Exclusions
					has_species_flag = community_mod_rules_trigger
					OR = {
						has_species_flag = community_can_release_vassal_from_species_true
						has_species_flag = community_can_release_vassal_from_species_false
					}
				}
			}
			root = {
				is_sapient = yes
				### +GF/PTep/ETCPM/rmaid
				NOR = {
					##   |v智械|
					AND = {
						has_trait = trait_machine_unit
						#   rmaid
                		Maid_trigger_4_can_release_vassal_from_species = no
					}			
					AND = {
						has_trait = trait_hive_mind
						NOT = { 
							prev.this = { 
								has_origin = origin_progenitor_hive 
							} 
						}
					}
					AND = {
						NOT = { 
							has_trait = trait_hive_mind 
						}
						prev.this = {
							has_authority = auth_hive_mind 
						}
					}
					has_trait = trait_mechanical
					can_think = no
					has_trait = trait_clone_soldier_infertile
					has_trait = trait_clone_soldier_infertile_full_potential
					# Ecar
					has_trait = trait_flesh_components
					# GF
					has_trait = GF_trait_doll
					# PTep
					has_trait = trait_plentiful_traditions_pt_cocoon
					# Eevt/ETCPM
					has_trait = trait_memorex_comatos
					has_trait = trait_infested_basic
					#多彩附属物种
					if = {
						limit = {
							has_global_flag = love_between_us
						}
						is_cg_vassal_species = yes
					}
					else = {
						always = no
					}
					if = {
						limit = {
							has_global_flag = expanded_pops_active
						}
						prev = { 
							NOT = { 
								has_technology = tech_synthetic_leaders 
							} 
						}
						has_trait = trait_mechanical
					}
					else = {
						always = no
					}
				}

				# ETCPM	##################
				if = {
					limit = {
						has_global_flag = expanded_pops_active
						prev = {
							OR = {
								has_valid_civic = civic_fanatic_purifiers
								has_valid_civic = civic_machine_assimilator
								has_valid_civic = civic_hive_devouring_swarm
							}
						}
					}
					is_same_species = prev
				}
				if = {
					limit = {
						has_global_flag = expanded_pops_active
						prev = { 
							has_authority = auth_machine_intelligence 
						}
					}
					OR = {
						has_trait = trait_machine_unit
						has_citizenship_rights = yes
						has_citizenship_type = { 
							type = citizenship_limited 
						}
					}
				}
				if = {
					limit = {
						has_global_flag = expanded_pops_active
						prev = { 
							has_authority = auth_hive_mind 
						}
					}
					OR = {
						has_trait = trait_hive_mind
						has_citizenship_rights = yes
						has_citizenship_type = { 
							type = citizenship_limited 
						}
					}
				}
			}
		}
		AND = { #国防部 MOD
			root = {
				has_species_flag = community_mod_rules_trigger
				AND = {
					has_species_flag = community_can_release_vassal_from_species_true
					NOT = { 
						has_species_flag = community_can_release_vassal_from_species_false 
					}
				}
			}
		}
	}
}


###	SC	####################################
# Can the country have robot pop
# root: country
can_have_robot_pops = { #可拥有机器人pop
	OR = {
		AND = { # 香草 vanilla
			NAND = { #排除条件 Exclusions
				has_country_flag = community_mod_rules_trigger
				OR = {
					has_country_flag = community_can_have_robot_pops_true
					has_country_flag = community_can_have_robot_pops_false
				}
			}
			exists = this
			NOT = {
				has_authority = auth_hive_mind
			}
			NOT = {
				has_policy_flag = robots_outlawed
			}
			#WSG
			AND = {
				has_wg_and_uf_special_authority = no
				NOR = {
					AND = {
						has_country_flag = carnalism_flag
						has_technology = tech_robot_transformation
					}
					AND = {
						has_country_flag = asceticism_flag
						has_technology = tech_robot_transformation2
					}	
				}
			}
			#雌伏于阴影之下
			NOT = {
				has_origin = origin_female_in_shadow
			}
		}
		AND = { #国防部 MOD
			has_country_flag = community_mod_rules_trigger
			AND = {
				has_country_flag = community_can_have_robot_pops_true
				NOT = { 
					has_country_flag = community_can_have_robot_pops_false 
				}
			}
		}
	}
}

# Can the pop be purged/disassembled individually by its owner
# scope: pop
can_purge_pop_manually = { #可手动清除pop
	custom_tooltip = {
		fail_text = "ALREADY_BEING_PURGED"
		NOT = { 
			has_citizenship_type = { 
				type = citizenship_purge 
				country = owner 
			} 
		}
	}
	custom_tooltip = {
		fail_text = "ACTION_CANNOT_PURGE_CITIZEN"
		exists = owner
		OR = {
			is_robot_pop = yes
			is_sapient = no
			owner = { 
				has_authority = auth_hive_mind 
			}
			has_citizenship_type = { 
				type = citizenship_slavery 
				country = owner 
			}
			has_citizenship_type = { 
				type = citizenship_full_machine 
				country = owner 
			}
		}
	}
	custom_tooltip = {
		fail_text = "ACTION_CANNOT_PURGE_POLICY"
		exists = owner
		OR = {
			is_robot_pop = yes
			AND = {
				is_sapient = no
				owner = { 
					NOT = { 
						has_policy_flag = pre_sapients_protect 
					} 
				}
			}
			owner = { 
				has_ethic = ethic_gestalt_consciousness 
			}
			owner = { 
				has_policy_flag = purge_allowed 
			}
		}
	}
	custom_tooltip = {
		fail_text = "ACTION_DISASSEMBLE_SYNTHETICS"
		exists = owner
		OR = {
			is_robot_pop = no
			owner = { 
				has_authority = auth_hive_mind 
			}
			NAND = {
				has_trait = trait_mechanical
				owner = { 
					has_policy_flag = ai_full_rights 
				}
			}
		}
	}
	# CG
	custom_tooltip = {
		fail_text = "ACTION_CANNOT_PURGE_INFESTED_DC"
		exists = owner
		has_trait = trait_infested_dc2
	}
}

###_[pop可移民]		ETCPM/HFE	####################################
# Root = current planet
# This = pop
# Purge, Sapience, Migration Controls policy (ignored by Gestalts and Synths), and target habitability are checked in code.
can_pop_auto_migrate = { #可自动迁移的pop
	## +ETCPM/HFE
	hidden_trigger = { 
		OR = {
			is_unemployed = yes
			# ETCPM
			has_job = grunt
			has_job = slave_toiler
			# HFE
			hfe_trigger_unemployed_auto_migrate = yes
		}
	} #this is always true where this tooltip is called	
	custom_tooltip = {
		fail_text = AUTO_MIGRATE_ASSIMILATED
		is_being_assimilated = no
	}

	## +HFE
	OR = {
		AND = {
			is_shackled_robot = no
			is_enslaved = no
		}
		custom_tooltip = {
			fail_text = AUTO_MIGRATE_SLAVE_PROCESSING
			OR = {
				planet = {
					OR = {
						has_building = building_slave_processing
						AND = {
							exists = orbital_defence
							orbital_defence = {
								exists = starbase
								starbase = {
									has_starbase_building = ring_slave_processing_facility
								}
							}
						}
					}
				}
				solar_system = {
					count_starbase_buildings = {
						type = transit_hub
						count >= 1
						include_being_constructed = no
					}
				}
			}
		}
		# HFE
		owner = {
			OR = {
				is_country_type = hfe_pirate
				hfe_trigger_is_human_fallen = yes
			}
		}
	}
	#雌伏于阴影之下
	NOT = {
		owner = {
			has_origin = origin_female_in_shadow
			hidden_trigger = {
				any_country = { 
					has_country_flag = origin_female_in_shadow@prev 
				}
			}
			NOT = { 
				has_ascension_perk = ap_bumpy_cg_road_ahead_yield 
			}
		}
	}
}

###_[可迁移の人口=定位]		########################################################################
# This = pop
can_resettle_pop = { #可以重新安置pop
	# Self-modified Pops won't leave
	custom_tooltip = {
		fail_text = "self_modified_refuse"
		NOT = { 
			has_trait = trait_self_modified 
		}
	}
	custom_tooltip = {
		fail_text = "origin_egalitarian_refuse"
		NAND = {
			pop_has_ethic = ethic_egalitarian
			is_enslaved = no
			planet = { has_modifier = paragon_origin_reformists }
		}
	}
	if = { #Done as an IF/ELSE so the tooltip isn't hideous and unreadable
		limit = { 
			is_shackled_robot = yes 
		}
		always = yes
	}
	else_if = {
		limit = {
			planet = {
				is_doomsday_planet = yes
			}
		}
		always = yes
	}
	else_if = {
		limit = {
			planet = {
				has_modifier = planet_culture_shock
			}
		}
		OR = {
			is_same_species = planet.owner
			planet = {
				NOT = { 
					has_modifier = planet_culture_shock 
				}
			}
		}
	}
	else_if = {
		limit = {
			owner = {
				is_gestalt = yes
			}
		}
		always = yes
	}
	else = {
		custom_tooltip = {
			fail_text = RESETTLEMENT_POLICY_FAIL
			owner = {
				has_policy_flag = resettlement_allowed
			}
		}
	}
	#雌伏于阴影之下
	NOT = {
		owner = {
			has_origin = origin_female_in_shadow
			any_country = {
				has_country_flag = origin_female_in_shadow@prev
			}
			NOT = {
				has_ascension_perk = ap_bumpy_cg_road_ahead_yield
			}
		}
	}
}

###_[基因修饰]	####################################
###_|宜居改造|	+FW/PF
#This, root = country
can_gene_mod_habitability = { #基因修饰宜居性
	OR = {
		NAND = { #排除条件 Exclusions
				has_country_flag = community_mod_rules_trigger
				OR = {
					has_country_flag = community_can_gene_mod_habitability_true
					has_country_flag = community_can_gene_mod_habitability_false
				}
			}
		AND = { #香草 vanilla
			OR = {
				has_technology = tech_glandular_acclimation
				has_country_flag = FW_flg_cntr_CHT_genemodding	# FW
			}
			#	PF
			NOT = { 
				has_country_flag = PF_flg_cntr_STOP_ai_species_mod 
			}
		}
		AND = { #国防部 MOD
			has_country_flag = community_mod_rules_trigger
			AND = {
				has_country_flag = community_can_gene_mod_habitability_true
				NOT = { 
					has_country_flag = community_can_gene_mod_habitability_false 
				}
			}
		}
	}
}

###_|高级特质|	+wsg/涅槃
#This, root = country
can_add_advanced_traits = { 
	OR = {
		AND = { #香草 vanilla
			NAND = { #排除条件 Exclusions
				has_country_flag = community_mod_rules_trigger
				OR = {
					has_country_flag = community_can_add_advanced_traits_true
					has_country_flag = community_can_add_advanced_traits_false
				}
			}
			has_utopia = yes
			OR = {
				has_technology = tech_genetic_resequencing
				#	FW
				has_country_flag = FW_flg_cntr_CHT_genemodding	
				#	wsg
				has_tradition = tr_genetics_creation
				has_wsg_genemodding_tech = yes	
				#	涅槃
				is_nirvana_empire = yes	
				#	SWG
				has_str_genemodding_tech = yes
			}
			#	PF
			NOT = { 
				has_country_flag = PF_flg_cntr_STOP_ai_species_mod 
			}
		}
		AND = { #国防部 MOD
			has_country_flag = community_mod_rules_trigger
			AND = {
				has_country_flag = community_can_add_advanced_traits_true
				NOT = { 
					has_country_flag = community_can_add_advanced_traits_false 
				}
			}
		}
	}
}

###_|负面特质|	+FW/PF/wsg/涅槃
#This, root = country
can_add_negative_traits_organic = { #可以添加有机负面特质
	OR = {
		AND = { #香草 vanilla
			NAND = { #排除条件 Exclusions
				has_country_flag = community_mod_rules_trigger
				OR = {
					has_country_flag = community_can_add_negative_traits_organic_true
					has_country_flag = community_can_add_negative_traits_organic_false
				}
			}
			has_utopia = yes
			OR = {
				has_technology = tech_genetic_resequencing
				has_tradition = tr_genetics_resequencing
				has_tradition = tr_cybernetics_integrated_anatomy
				has_tradition = tr_cybernetics_assimilator_integrated_anatomy
				# FW
				has_country_flag = FW_flg_cntr_CHT_genemodding	
				# wsg
				has_wsg_genemodding_tech = yes	
				# 涅槃
				is_nirvana_empire = no	
				# SWG		
				has_str_genemodding_tech = yes	
			}
			#	PF
			NOT = { 
				has_country_flag = PF_flg_cntr_STOP_ai_species_mod 
			}
		}
		AND = { #国防部 MOD
			has_country_flag = community_mod_rules_trigger
			AND = {
				has_country_flag = community_can_add_negative_traits_organic_true
				NOT = { 
					has_country_flag = community_can_add_negative_traits_organic_false 
				}
			}
		}
	}
}

###_|移除高级|	FW/PF/wsg/涅槃
#This, root = country
can_remove_positive_traits_organic = { #可以移除正面有机特质
	OR = {
		AND = { #香草 vanilla
			NAND = { #排除条件 Exclusions
				has_country_flag = community_mod_rules_trigger
				OR = {
					has_country_flag = community_can_remove_positive_traits_organic_true
					has_country_flag = community_can_remove_positive_traits_organic_false
				}
			}
			OR = {
				#_|乌托邦|	+wsg
				AND = {
					has_utopia = yes
					OR = {
						has_technology = tech_genetic_resequencing
						has_tradition = tr_genetics_resequencing
						has_tradition = tr_cybernetics_integrated_anatomy
						has_tradition = tr_cybernetics_assimilator_integrated_anatomy
						has_wsg_genemodding_tech = yes	# wsg
						has_str_genemodding_tech = yes	# SWG
					}
				}
				#_|毒种|
				AND = {
					has_toxoids = yes
					has_origin = origin_overtuned
				}
				
				#_|科技|
				has_technology = tech_epigenetic_triggers

				#_|MOD|
				has_country_flag = FW_flg_cntr_CHT_genemodding	# FW
				is_nirvana_empire = yes	#	涅槃
			}
			#	PF
			NOT = { 
				has_country_flag = PF_flg_cntr_STOP_ai_species_mod 
			}
		}
		AND = { #国防部 MOD
			has_country_flag = community_mod_rules_trigger
			AND = {
				has_country_flag = community_can_remove_positive_traits_organic_true
				NOT = { 
					has_country_flag = community_can_remove_positive_traits_organic_false 
				}
			}
		}
	}
}

###_|有机头像|	+FW/PF/wsg/涅槃
#This, root = country
can_modify_organic_portraits = { #可以修改有机肖像
	OR = {
		AND = { #香草 vanilla
			host_has_dlc = "Utopia"
			OR = {
				has_tradition = tr_genetics_enhanced_expression
				has_technology = tech_genetic_resequencing
				has_country_flag = FW_flg_cntr_CHT_genemodding	# FW
				has_tradition = tr_genetics_enhanced_expression
				has_wsg_genemodding_tech = yes	# wsg
				has_str_genemodding_tech = yes	#SWG
				is_nirvana_empire = yes			# 涅槃
			}
			#	PF
			NOT = { 
				has_country_flag = PF_flg_cntr_STOP_ai_species_mod 
			}

			NAND = { #排除条件 Exclusions
				has_country_flag = community_mod_rules_trigger
				OR = {
					has_country_flag = community_can_modify_organic_portraits_true
					has_country_flag = community_can_modify_organic_portraits_false
				}
			}
		}
		AND = { #国防部 MOD
			has_country_flag = community_mod_rules_trigger
			AND = {
				has_country_flag = community_can_modify_organic_portraits_true
				NOT = { 
					has_country_flag = community_can_modify_organic_portraits_false 
				}
			}
		}
	}
}